.TH "Shopify.Unity.QueryRoot" 3 "Achroma" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Shopify.Unity.QueryRoot \- The schema’s entry-point for queries\&. This acts as the public, top-level API from which all queries must start\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBShopify\&.Unity\&.SDK\&.AbstractResponse\fP, and ICloneable\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQueryRoot\fP (Dictionary< string, object > dataJSON)"
.br
.RI "Accepts deserialized json data\&.  Will further parse passed in data\&. "
.ti -1c
.RI "\fBArticleConnection\fP \fBarticles\fP (string alias=null)"
.br
.RI "List of the shop's articles\&. "
.ti -1c
.RI "\fBBlog\fP \fBblogByHandle\fP (string alias=null)"
.br
.RI "Find a blog by its handle\&. "
.ti -1c
.RI "\fBBlogConnection\fP \fBblogs\fP (string alias=null)"
.br
.RI "List of the shop's blogs\&. "
.ti -1c
.RI "\fBCollection\fP \fBcollectionByHandle\fP (string alias=null)"
.br
.RI "Find a collection by its handle\&. "
.ti -1c
.RI "\fBCollectionConnection\fP \fBcollections\fP (string alias=null)"
.br
.RI "List of the shop’s collections\&. "
.ti -1c
.RI "\fBCustomer\fP \fBcustomer\fP (string alias=null)"
.br
.RI "Find a customer by its access token\&. "
.ti -1c
.RI "\fBNode\fP \fBnode\fP (string alias=null)"
.br
.RI "Returns a specific node by ID\&. "
.ti -1c
.RI "List< \fBNode\fP > \fBnodes\fP (string alias=null)"
.br
.RI "Returns the list of nodes with the given IDs\&. "
.ti -1c
.RI "\fBPage\fP \fBpageByHandle\fP (string alias=null)"
.br
.RI "Find a page by its handle\&. "
.ti -1c
.RI "\fBPageConnection\fP \fBpages\fP (string alias=null)"
.br
.RI "List of the shop's pages\&. "
.ti -1c
.RI "\fBProduct\fP \fBproductByHandle\fP (string alias=null)"
.br
.RI "Find a product by its handle\&. "
.ti -1c
.RI "List< \fBProduct\fP > \fBproductRecommendations\fP (string alias=null)"
.br
.RI "Find recommended products related to a given \fCproduct_id\fP\&. To learn more about how recommendations are generated, see \fC\fIShowing product recommendations on product pages\fP\fP\&. "
.ti -1c
.RI "\fBStringConnection\fP \fBproductTags\fP (string alias=null)"
.br
.RI "Tags added to products\&. Additional access scope required: unauthenticated_read_product_tags\&. "
.ti -1c
.RI "\fBStringConnection\fP \fBproductTypes\fP (string alias=null)"
.br
.RI "List of product types for the shop's products that are published to your app\&. "
.ti -1c
.RI "\fBProductConnection\fP \fBproducts\fP (string alias=null)"
.br
.RI "List of the shop’s products\&. "
.ti -1c
.RI "List< \fBApiVersion\fP > \fBpublicApiVersions\fP ()"
.br
.RI "The list of public Storefront API versions, including supported, release candidate and unstable versions\&. "
.ti -1c
.RI "\fBShop\fP \fBshop\fP ()"
.br
.RI "The shop associated with the storefront access token\&. "
.ti -1c
.RI "object \fBClone\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"


Protected Member Functions inherited from \fBShopify\&.Unity\&.SDK\&.AbstractResponse\fP
.in +1c
.ti -1c
.RI "T \fBGet< T >\fP (string field, string alias=null)"
.br
.in -1c

Protected Attributes inherited from \fBShopify\&.Unity\&.SDK\&.AbstractResponse\fP
.in +1c
.ti -1c
.RI "Dictionary< string, object > \fBData\fP"
.br
.in -1c

Properties inherited from \fBShopify\&.Unity\&.SDK\&.AbstractResponse\fP
.in +1c
.ti -1c
.RI "Dictionary< string, object > \fBDataJSON\fP\fC [get, protected set]\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
The schema’s entry-point for queries\&. This acts as the public, top-level API from which all queries must start\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Shopify\&.Unity\&.QueryRoot\&.QueryRoot (Dictionary< string, object > dataJSON)"

.PP
Accepts deserialized json data\&.  Will further parse passed in data\&. 
.PP
\fBParameters\fP
.RS 4
\fIdataJSON\fP Deserialized JSON data for QueryRoot
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "\fBArticleConnection\fP Shopify\&.Unity\&.QueryRoot\&.articles (string alias = \fCnull\fP)"

.PP
List of the shop's articles\&. 
.PP
\fBParameters\fP
.RS 4
\fIalias\fP If the original field queried was queried using an alias, then pass the matching string\&. 
.RE
.PP

.SS "\fBBlog\fP Shopify\&.Unity\&.QueryRoot\&.blogByHandle (string alias = \fCnull\fP)"

.PP
Find a blog by its handle\&. 
.PP
\fBParameters\fP
.RS 4
\fIalias\fP If the original field queried was queried using an alias, then pass the matching string\&. 
.RE
.PP

.SS "\fBBlogConnection\fP Shopify\&.Unity\&.QueryRoot\&.blogs (string alias = \fCnull\fP)"

.PP
List of the shop's blogs\&. 
.PP
\fBParameters\fP
.RS 4
\fIalias\fP If the original field queried was queried using an alias, then pass the matching string\&. 
.RE
.PP

.SS "\fBCollection\fP Shopify\&.Unity\&.QueryRoot\&.collectionByHandle (string alias = \fCnull\fP)"

.PP
Find a collection by its handle\&. 
.PP
\fBParameters\fP
.RS 4
\fIalias\fP If the original field queried was queried using an alias, then pass the matching string\&. 
.RE
.PP

.SS "\fBCollectionConnection\fP Shopify\&.Unity\&.QueryRoot\&.collections (string alias = \fCnull\fP)"

.PP
List of the shop’s collections\&. 
.PP
\fBParameters\fP
.RS 4
\fIalias\fP If the original field queried was queried using an alias, then pass the matching string\&. 
.RE
.PP

.SS "\fBCustomer\fP Shopify\&.Unity\&.QueryRoot\&.customer (string alias = \fCnull\fP)"

.PP
Find a customer by its access token\&. 
.PP
\fBParameters\fP
.RS 4
\fIalias\fP If the original field queried was queried using an alias, then pass the matching string\&. 
.RE
.PP

.SS "\fBNode\fP Shopify\&.Unity\&.QueryRoot\&.node (string alias = \fCnull\fP)"

.PP
Returns a specific node by ID\&. 
.PP
\fBParameters\fP
.RS 4
\fIalias\fP If the original field queried was queried using an alias, then pass the matching string\&. 
.RE
.PP

.SS "List< \fBNode\fP > Shopify\&.Unity\&.QueryRoot\&.nodes (string alias = \fCnull\fP)"

.PP
Returns the list of nodes with the given IDs\&. 
.PP
\fBParameters\fP
.RS 4
\fIalias\fP If the original field queried was queried using an alias, then pass the matching string\&. 
.RE
.PP

.SS "\fBPage\fP Shopify\&.Unity\&.QueryRoot\&.pageByHandle (string alias = \fCnull\fP)"

.PP
Find a page by its handle\&. 
.PP
\fBParameters\fP
.RS 4
\fIalias\fP If the original field queried was queried using an alias, then pass the matching string\&. 
.RE
.PP

.SS "\fBPageConnection\fP Shopify\&.Unity\&.QueryRoot\&.pages (string alias = \fCnull\fP)"

.PP
List of the shop's pages\&. 
.PP
\fBParameters\fP
.RS 4
\fIalias\fP If the original field queried was queried using an alias, then pass the matching string\&. 
.RE
.PP

.SS "\fBProduct\fP Shopify\&.Unity\&.QueryRoot\&.productByHandle (string alias = \fCnull\fP)"

.PP
Find a product by its handle\&. 
.PP
\fBParameters\fP
.RS 4
\fIalias\fP If the original field queried was queried using an alias, then pass the matching string\&. 
.RE
.PP

.SS "List< \fBProduct\fP > Shopify\&.Unity\&.QueryRoot\&.productRecommendations (string alias = \fCnull\fP)"

.PP
Find recommended products related to a given \fCproduct_id\fP\&. To learn more about how recommendations are generated, see \fC\fIShowing product recommendations on product pages\fP\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIalias\fP If the original field queried was queried using an alias, then pass the matching string\&. 
.RE
.PP

.SS "\fBProductConnection\fP Shopify\&.Unity\&.QueryRoot\&.products (string alias = \fCnull\fP)"

.PP
List of the shop’s products\&. 
.PP
\fBParameters\fP
.RS 4
\fIalias\fP If the original field queried was queried using an alias, then pass the matching string\&. 
.RE
.PP

.SS "\fBStringConnection\fP Shopify\&.Unity\&.QueryRoot\&.productTags (string alias = \fCnull\fP)"

.PP
Tags added to products\&. Additional access scope required: unauthenticated_read_product_tags\&. 
.PP
\fBParameters\fP
.RS 4
\fIalias\fP If the original field queried was queried using an alias, then pass the matching string\&. 
.RE
.PP

.SS "\fBStringConnection\fP Shopify\&.Unity\&.QueryRoot\&.productTypes (string alias = \fCnull\fP)"

.PP
List of product types for the shop's products that are published to your app\&. 
.PP
\fBParameters\fP
.RS 4
\fIalias\fP If the original field queried was queried using an alias, then pass the matching string\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Achroma from the source code\&.
